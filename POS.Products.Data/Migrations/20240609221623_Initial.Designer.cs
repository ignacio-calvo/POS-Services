// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Products.Data.Models;

#nullable disable

namespace POS.Products.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240609221623_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POS.Products.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsComboMeal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPizza")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrepared")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecialtyPizza")
                        .HasColumnType("bit");

                    b.Property<short?>("IsTaxable")
                        .HasColumnType("smallint");

                    b.Property<string>("KitchenDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuCategoryDisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("MenuCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("MenuItemImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<short>("MenuItemTypeCode")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShouldPrintLabel")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShouldPrintNutritionalLabel")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShouldPrintTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("ShouldPromptForSize")
                        .HasColumnType("bit");

                    b.Property<short>("StatusCode")
                        .HasColumnType("smallint");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("POS.Products.Data.Models.ProductSize", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultSize")
                        .HasColumnType("bit");

                    b.Property<short>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PriceByWeight")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("StatusCode")
                        .HasColumnType("smallint");

                    b.Property<float>("TareWeight")
                        .HasColumnType("real");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSize");
                });

            modelBuilder.Entity("POS.Products.Data.Models.ProductSize", b =>
                {
                    b.HasOne("POS.Products.Data.Models.Product", "Product")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("POS.Products.Data.Models.Product", b =>
                {
                    b.Navigation("Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
