// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Products.Data.Models;

#nullable disable

namespace POS.Products.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240814210421_MoreSeedData")]
    partial class MoreSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POS.Products.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Variety of pizzas",
                            ImageUrl = "pizza-icon.png",
                            Name = "Pizzas"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Side dishes like cheese sticks",
                            ImageUrl = "sides-icon.png",
                            Name = "Sides"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Drinks",
                            ImageUrl = "beverages-icon.png",
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Variety of chicken wings",
                            ImageUrl = "chickenwings-icon.png",
                            Name = "Chicken Wings"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Different types of pasta",
                            ImageUrl = "pasta-icon.png",
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Fresh salads",
                            ImageUrl = "salad-icon.png",
                            Name = "Salad"
                        });
                });

            modelBuilder.Entity("POS.Products.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPizza")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrepared")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecialtyPizza")
                        .HasColumnType("bit");

                    b.Property<short?>("IsTaxable")
                        .HasColumnType("smallint");

                    b.Property<string>("KitchenDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ProductTypeCode")
                        .HasColumnType("smallint");

                    b.Property<string>("ReceiptDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShouldPromptForSize")
                        .HasColumnType("bit");

                    b.Property<short>("StatusCode")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Classic pizza with tomato, mozzarella, and basil",
                            DisplayOrder = 1,
                            Name = "Margherita Pizza",
                            ProductImageUrl = "margherita.png",
                            ProductTypeCode = (short)1,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Pizza with pepperoni and cheese",
                            DisplayOrder = 2,
                            Name = "Pepperoni Pizza",
                            ProductImageUrl = "pepperoni.png",
                            ProductTypeCode = (short)1,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Baked cheese sticks",
                            DisplayOrder = 3,
                            Name = "Cheese Sticks",
                            ProductImageUrl = "cheesesticks.png",
                            ProductTypeCode = (short)2,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Soft drink",
                            DisplayOrder = 4,
                            Name = "Coca-Cola",
                            ProductImageUrl = "cocacola.png",
                            ProductTypeCode = (short)3,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Chicken wings with BBQ sauce",
                            DisplayOrder = 5,
                            Name = "BBQ Chicken Wings",
                            ProductImageUrl = "bbqwings.png",
                            ProductTypeCode = (short)4,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Spaghetti with meat sauce",
                            DisplayOrder = 6,
                            Name = "Spaghetti Bolognese",
                            ProductImageUrl = "spaghetti.png",
                            ProductTypeCode = (short)5,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Salad with romaine lettuce, croutons, and Caesar dressing",
                            DisplayOrder = 7,
                            Name = "Caesar Salad",
                            ProductImageUrl = "caesarsalad.png",
                            ProductTypeCode = (short)6,
                            ShouldPromptForSize = false,
                            StatusCode = (short)1
                        });
                });

            modelBuilder.Entity("POS.Products.Data.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 6
                        });
                });

            modelBuilder.Entity("POS.Products.Data.Models.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultSize")
                        .HasColumnType("bit");

                    b.Property<short>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PriceByWeight")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("StatusCode")
                        .HasColumnType("smallint");

                    b.Property<float>("TareWeight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "Small",
                            Price = 8.99m,
                            PriceByWeight = false,
                            ProductId = 1,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 2,
                            DefaultSize = false,
                            DisplayOrder = (short)2,
                            Name = "Medium",
                            Price = 10.99m,
                            PriceByWeight = false,
                            ProductId = 1,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 3,
                            DefaultSize = false,
                            DisplayOrder = (short)3,
                            Name = "Large",
                            Price = 12.99m,
                            PriceByWeight = false,
                            ProductId = 1,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 4,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "Small",
                            Price = 9.99m,
                            PriceByWeight = false,
                            ProductId = 2,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 5,
                            DefaultSize = false,
                            DisplayOrder = (short)2,
                            Name = "Medium",
                            Price = 11.99m,
                            PriceByWeight = false,
                            ProductId = 2,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 6,
                            DefaultSize = false,
                            DisplayOrder = (short)3,
                            Name = "Large",
                            Price = 13.99m,
                            PriceByWeight = false,
                            ProductId = 2,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 7,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "Regular",
                            Price = 4.99m,
                            PriceByWeight = false,
                            ProductId = 3,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 8,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "Can",
                            Price = 1.99m,
                            PriceByWeight = false,
                            ProductId = 4,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 9,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "6 Pieces",
                            Price = 6.99m,
                            PriceByWeight = false,
                            ProductId = 5,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 10,
                            DefaultSize = false,
                            DisplayOrder = (short)2,
                            Name = "12 Pieces",
                            Price = 12.99m,
                            PriceByWeight = false,
                            ProductId = 5,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 11,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "Regular",
                            Price = 9.99m,
                            PriceByWeight = false,
                            ProductId = 6,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        },
                        new
                        {
                            Id = 12,
                            DefaultSize = true,
                            DisplayOrder = (short)1,
                            Name = "Regular",
                            Price = 7.99m,
                            PriceByWeight = false,
                            ProductId = 7,
                            StatusCode = (short)1,
                            TareWeight = 0f
                        });
                });

            modelBuilder.Entity("POS.Products.Data.Models.ProductCategory", b =>
                {
                    b.HasOne("POS.Products.Data.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POS.Products.Data.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("POS.Products.Data.Models.ProductSize", b =>
                {
                    b.HasOne("POS.Products.Data.Models.Product", "Product")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("POS.Products.Data.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("POS.Products.Data.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
